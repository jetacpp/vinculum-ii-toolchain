/*
** USBHostCDC.h
**
** Copyright © 2009-2011 Future Technology Devices International Limited
**
** THIS SOFTWARE IS PROVIDED BY FUTURE TECHNOLOGY DEVICES INTERNATIONAL LIMITED
** ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
** TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL FUTURE TECHNOLOGY DEVICES
** INTERNATIONAL LIMITED BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
** EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
** OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
** STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
** DAMAGE.
**
** Header file containing definitions for the USB Host CDC driver.
**
** Author: FTDI
** Project: Vinculum II Drivers
** Module: Vinculum II USB Host CDC Driver
** Requires: vos.h ioctl.h
** Comments:
**
** History:
**  1 – Initial version
**
*/

#ifndef __USBHOSTCDC_H__
#define __USBHOSTCDC_H__

#include "ioctl.h"
#include "USBCDC.h"

#define USBHOSTCDC_VERSION_STRING "2.0.2"

// thread memory size required by this driver
#define USBHOSTCDC_POLL_STATUS_MEMORY						0x180
#define USBHOSTCDC_POLL_DATA_MEMORY						0x280

// USBHOSTCDC IOCTL definitions (same as UART/SPI/FIFO IOCTL codes)
// CDC IOCTL definitions (based on UART definitions)
#define VOS_IOCTL_USBHOSTCDC_GET_LINE_CODING		(VOS_IOCTL_UART_BASE + 2)
#define VOS_IOCTL_USBHOSTCDC_SET_LINE_CODING		(VOS_IOCTL_UART_BASE + 3)
#define VOS_IOCTL_USBHOSTCDC_SET_LINE_CONTROL_STATE (VOS_IOCTL_UART_BASE + 4)
#define VOS_IOCTL_USBHOSTCDC_GET_UART_STATE_BITMAP	(VOS_IOCTL_UART_BASE + 5)
#define VOS_IOCTL_USBHOSTCDC_GET_NETWORK_CONNECTION	(VOS_IOCTL_UART_BASE + 6)
#define VOS_IOCTL_USBHOSTCDC_SET_BREAK_ON			(VOS_IOCTL_UART_BASE + 11) // set line break condition
#define VOS_IOCTL_USBHOSTCDC_SET_BREAK_OFF			(VOS_IOCTL_UART_BASE + 12) // clear line break condition

// further CDC IOCTL definitions (based on USBHostFT232 definitions)
#define VOS_IOCTL_USBHOSTCDC_ATTACH					(VOS_IOCTL_USBHOSTFT232_BASE + 7)
#define VOS_IOCTL_USBHOSTCDC_DETACH					(VOS_IOCTL_USBHOSTFT232_BASE + 8)
#define VOS_IOCTL_USBHOSTCDC_START_POLL				(VOS_IOCTL_USBHOSTFT232_BASE + 9)
#define VOS_IOCTL_USBHOSTCDC_STOP_POLL				(VOS_IOCTL_USBHOSTFT232_BASE + 10)

typedef struct _usbHostCDC_ioctl_cb_attach_t
{
    VOS_HANDLE				 hc_handle;
    usbhost_device_handle_ex ifCtrl;
    usbhost_device_handle_ex ifData;
} usbHostCDC_ioctl_cb_attach_t;

// Return codes
enum USBHOSTCDC_STATUS {
    USBHOSTCDC_OK = 0,
    USBHOSTCDC_INVALID_PARAMETER,
    USBHOSTCDC_DMA_NOT_ENABLED,
    USBHOSTCDC_ERROR,
    USBHOSTCDC_NOT_FOUND,
    USBHOSTCDC_USBHOST_ERROR = 0x80,
    USBHOSTCDC_FATAL_ERROR = 0xFF
};

// USBHOSTCDC initialisation function
unsigned char usbHostCDC_init(unsigned char vos_dev_num);

#endif                                 /* __USBHOSTCDC_H__ */
